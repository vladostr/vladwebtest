pipeline {
    agent any
    tools{
			maven 'myMaven-3'
			jdk 'myJDK-1.8'
		 } 
	environment{
		SELENIUM_CLASSPATH=""
		SELENIUM_OUTPUT="var"
	}
	stages{
		stage('Build Dev') {
            when { branch 'dev*' }
            steps {
                echo '1. Build'
                sh 'echo "Build for $BRANCH_NAME"'
            }
        }
        stage('Artifactory Dev') {
            when { branch 'dev*' }
            steps {
                echo '2. Load to Artifactory'
                sh 'echo "Artifactory for $BRANCH_NAME"'
            }
        }
        
       
        stage('Test deployed to web on master') {
            when { not { anyOf { branch 'dev1'; branch 'dev2' } } }
            steps {
            	script {
            		try {
	    				notifyBuild('STARTED','TEST')
	    				SELENIUM_CLASSPATH="'/opt/selenium/selenium_java-3.141.59/client-combined-3.141.59-sources.jar:"+
	    				     "/opt/selenium/selenium_java-3.141.59/client-combined-3.141.59.jar:/opt/selenium/selenium_java-3.141.59/libs/okio-1.14.0.jar:"+
	    				     "/opt/selenium/selenium_java-3.141.59/libs/okhttp-3.11.0.jar:/opt/selenium/selenium_java-3.141.59/libs/guava-25.0-jre.jar:"+
	    				     "/opt/selenium/selenium_java-3.141.59/libs/commons-exec-1.3.jar:/opt/selenium/selenium_java-3.141.59/libs/byte-buddy-1.8.15.jar:"+
	    				     "/home/inst1/git/TestJavaPrg/TestJavaPrg/target/test-classes:/opt/jcommander/jcommander.jar:'/opt/selenium/selenium_java-3.141.59/client-combined-3.141.59-sources.jar:"+
	    				     "/opt/selenium/selenium_java-3.141.59/client-combined-3.141.59.jar:/opt/selenium/selenium_java-3.141.59/libs/okio-1.14.0.jar:"+
	    				     "/opt/selenium/selenium_java-3.141.59/libs/okhttp-3.11.0.jar:/opt/selenium/selenium_java-3.141.59/libs/guava-25.0-jre.jar:"+
	    				     "/opt/selenium/selenium_java-3.141.59/libs/commons-exec-1.3.jar:/opt/selenium/selenium_java-3.141.59/libs/byte-buddy-1.8.15.jar:"+
	    				     "/home/inst1/git/TestJavaPrg/TestJavaPrg/target/test-classes:/opt/jcommander/jcommander.jar:"+
	    				     "/home/inst1/.p2/pool/plugins/org.testng_6.14.2.r201802161450.jar" 
	    				     
	    				sh "java -cp $SELENIUM_CLASSPATH org.testng.TestNG -d '$SELENIUM_OUTPUT' '/home/inst1/git/TestJavaPrg/TestJavaPrg/testng.xml'"
						
						notifyBuild('SUCCESS','TEST') 	
					}
	   			 	catch (e) {
					    currentBuild.result = "FAILED"
					   	notifyBuild('FAILURE','TEST')
					    throw e
					}
			  	}
			}
        }
    }
}   

def notifyBuild(String buildStatus = 'STARTED', String step= 'BUILD', String param1='') {
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = step+" step ${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  def details 
  
  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
    if (step=='BUILD') {
    	details= """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    } else if (step=='ARTIFACTORY'){
    	details= """<p>Artifactory upload STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    } else if (step=='SonarQube analysis'){
    	details= """<p>SonarQube analysis STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    } else if (step=='DEPLOY'){
    	details= """<p>DEPLOY step STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    }else if (step=='TEST'){
    	details= """<p>Selenium test step STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    }
    
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
    if (step=='BUILD'){
    	details= """<p>SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    } else if (step=='ARTIFACTORY'){
    	details= """<p>Build '${env.JOB_NAME} [${env.BUILD_NUMBER}]' was successfully deployed to Artifactory.</p>
    		<p>Browse it in Artifactory, using <a href='$param1'>this link</a>.</p>"""
    } else if (step=='SonarQube analysis'){
    	details= """<p>ANALYSIS SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>You can browse report, using, using <a href='$param1'>this link</a>.</p>"""
    } else if (step=='DEPLOY'){
    	details= """<p>DEPLOY SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>You can browse report, using, using <a href='$param1'>this link</a>.</p>"""
    } 
    else if (step=='TEST'){
    	subject="Selenium: Job '${env.JOB_NAME}' Status: currentBuild.result Tests: passed"
    } 
  } else if (buildStatus == 'UNSTABLE') {
    color = 'BLUE'
    colorCode = '#FFFF00'
    details= """<p>Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' is <b>UNSTABLE</b>:</p>
    	<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
  } else if (buildStatus == 'CHANGED') {
  	color = 'BLUE'
    colorCode = '#FFFF00'
    details= """<p>Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' was <b>CHANGED</b>:</p>
    	<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
  
  } else {
    color = 'RED'
    colorCode = '#FF0000'
    if (step=='BUILD') {
    	details= """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    } else if (step=='SonarQube analysis'){
    	details= """<p>SonarQube analysis step FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    } else if (step=='ARTIFACTORY'){
    	details= """<p>Artifactory upload FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    }
    else if (step=='DEPLOY'){
    	details= """<p>DEPLOY FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    		<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
    } else if (step=='TEST'){
    	subject="Selenium: Job '${env.JOB_NAME}' Status: currentBuild.result Tests: failed"
    }
  }

  
  if ((step=='TEST') && (buildStatus != 'STARTED')) {  
	    emailext ( 
	    	mimeType: 'text/html',
	    	subject:subject,
	        body: '${FILE,path="var/emailable-report.html"}', 
	        recipientProviders: [[$class: 'RequesterRecipientProvider']]
	    )
  } else {
    	emailext (
	      subject: subject,
	      body: details,
	      recipientProviders: [[$class: 'RequesterRecipientProvider']]
	    )
  }
}