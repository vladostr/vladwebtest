pipeline {
    agent any
    tools{
			maven 'myMaven-3'
			jdk 'myJDK-1.8'
		 } 
	stages{
		stage('Build Dev') {
            when { branch 'dev*' }
            steps {
                echo '1. Build'
                sh 'echo "Build for $BRANCH_NAME"'
            }
        }
        stage('Artifactory Dev') {
            when { branch 'dev*' }
            steps {
                echo '2. Load to Artifactory'
                sh 'echo "Artifactory for $BRANCH_NAME"'
            }
        }
	    stage('Build Master') {
            when { not { anyOf { branch 'dev1'; branch 'dev2' } } }
            steps {
            	script {
	            		notifyBuild('STARTED')
		                sh "echo 'Build # for $BUILD_NUMBER for branch $BRANCH_NAME started'"
		                sh 'mvn clean package -f $WORKSPACE/vladwebtest/pom.xml'
		        }
            }
            post {
		        always {
		            sh "echo 'Build $BUILD_NUMBER for branch $BRANCH_NAME' completed!"
		        }
		        success {
		            notifyBuild('SUCCESS')
		        }
		        unstable {
		            notifyBuild('UNSTABLE')
		        }
		        failure {
		            notifyBuild('FAILURE')
		        }
		        changed {
		            notifyBuild('CHANGED')
		        }
    		}    
        }
        stage('Artifactory master') {
           when { not { anyOf { branch 'dev1'; branch 'dev2' } } }
            steps {
				script {
					def server = Artifactory.server('my_artifactory')
					def rtMaven = Artifactory.newMavenBuild()
					
					notifyBuild('STARTED')
		            sh "echo 'Artifactory stage for build # $BUILD_NUMBER to '"
					rtMaven.resolver server: server, releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot'
					rtMaven.deployer server: server, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local'
					rtMaven.tool = 'myMaven-3'
					rtMaven.deployer.artifactDeploymentPatterns.addInclude("*.war")
					
					def buildInfo = rtMaven.run pom: '$WORKSPACE/vladwebtest/pom.xml', goals: 'clean install -U -Dmaven.test.skip=true'
					sh "echo '*********************************'"
					sh "echo '"+buildInfo.name+"'"
					sh "echo '"+buildInfo.number+"'"
					sh "echo '"+server.url+"'"
					sh "echo '"+buildInfo.started+"'"
					sh "echo '*********************************'"
					server.publishBuildInfo buildInfo
				}
				
            }
            post {
		        always {
		            sh "echo 'Upload build # $BUILD_NUMBER for branch $BRANCH_NAME' completed!"
		        }
		        success {
		            notifyBuild('SUCCESS')
		        }
		        unstable {
		            notifyBuild('UNSTABLE')
		        }
		        failure {
		            notifyBuild('FAILURE')
		        }
		        changed {
		            notifyBuild('CHANGED')
		        }
    		} 
        }
    }
}   

def notifyBuild(String buildStatus = 'STARTED') {
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  def details 

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
    details= """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    	<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
    details= """<p>SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    	<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
  } else if (buildStatus == 'UNSTABLE') {
    color = 'BLUE'
    colorCode = '#FFFF00'
    details= """<p>Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' is <b>UNSTABLE</b>:</p>
    	<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
  } else if (buildStatus == 'CHANGED') {
  	color = 'BLUE'
    colorCode = '#FFFF00'
    details= """<p>Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' was <b>CHANGED</b>:</p>
    	<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
  
  } else {
    color = 'RED'
    colorCode = '#FF0000'
    details= """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    	<p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
  }

  emailext (
      subject: subject,
      body: details,
      recipientProviders: [[$class: 'RequesterRecipientProvider']]
    )
}